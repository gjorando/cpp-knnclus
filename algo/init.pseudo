# initialisation procedures

EkNNInit(points: array of (x,y) reals,K: integer): EkNNSystem* # General initialisation of the EkNNSystem
begin
	result* is a new EkNNSystem
	result->N <- length(points)
	result->K <- K
	result->C <- result->N
	result->points* is a new array of EkNNPoints (1..result->N)
	
	for i in 1:result->N do
	begin
		result->points[i]->x <- points[i, 1]
		result->points[i]->y <- points[i, 2]
	end
	
	EknnInitClusters(result)
	EkNNInitDistances(result)
	EkNNInitKNN(result)
	EkNNInitGamma(result)
	EkNNInitAlpha(result)
	EkNNInitV(result)

	return result
end

EkNNDestroy(s*: EkNNSystem) # Deallocates an EkNNSystem
begin
	delete s->points
	delete s->distances
	delete s->alpha
	delete s->v
	delete s->kNN
	delete s
end

EkNNInitClusters(result*: EkNNSystem) # Randomly inits clusters
begin
	clus is an array of integers (1..result->N)
	for i in 1:result->N do
	begin
		clus[i] <- i
	end

	toss(clus, result->N)

	for i in 1:result->N do
	begin
		result->points[i]->cluster = clus[i]
	end
end

EkNNInitDistances(result*: EkNNSystem) # Computes euclidian distances between each point
begin
	dist is a matrix of reals (1..result->N,1..result->N)

	for i in 1..result->N do
		for j in 1..i do
		begin
			dist[i,j] <- distance(result->points[i], result->points[j])
			dist[j, i] <- dist[i, j]
		end

	diagonal of dist <- 0

	result->distances <- dist
end

EkNNInitKNN(result*: EkNNSystem) # Computes the K nearest neighbours
begin
	kNN is a matrix of integers (1..N, 1..K)
	for i in 1..result->N do
	begin
		tmpD is an array of reals (1..N)
		tmpD <- a copy of result->distances[i,]
		tmp <- sort(tmpD) # tmp will contains sorted indexes, and tmpD sorted values
		k is an integer
		k <- 1

		for j in 1:result->K do
			if tmpD[j] != 0 then
			begin
				kNN[i, k] <- tmp[j]
				k++
			end
	end

	result->kNN <- kNN
end

EkNNInitGamma(result*: EkNNSystem) # Computes the gamma parameter
begin
	dist is an array of result->K*result->N reals
	cpt is an integer
	cpt <- 1

	for i in 1:result->N do
		for j in 1:result->K do
		begin
			dist[cpt] <- result->distances[i, result->kNN[i,j]]
			cpt++
		end

	result->gamma <- 1/median(dist)
end
